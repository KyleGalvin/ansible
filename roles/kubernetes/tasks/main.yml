
#
# upgrade the cloud image
#

- name: Apt update
  become: yes
  apt:
    update_cache: yes

- name: Apt upgrade
  become: yes
  apt:
    upgrade: yes

#
# install prerequisite packages
#
- name: Install utility packages
  become: yes
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - nfs-common

#
# install microk8s
#

- name: install microk8s
  become: yes
  command: snap install microk8s --classic --channel=1.27/stable

- name: add user kube to microk8s group
  become: yes
  command: usermod -a -G microk8s kube

- name: make kubernetes configuration directory
  become: yes
  command: mkdir -p ~/.kube

- name: set permissions for the kubernetes configuration directory
  become: yes
  command: chown -R kube ~/.kube

#
# configure firewall so pods can access each other and the outside net
#

- name: configure incoming firewall traffic
  become: yes
  command: ufw allow in on cni0

- name: configure outgoing firewall traffic
  become: yes
  command: ufw allow out on cni0

- name: firewall permissive routing
  become: yes
  command: ufw default allow routed

#
# enable microk8s modules
#

- name: microk8s enable dns
  become: yes
  command: microk8s enable dns 

- name: microk8s enable dashboard
  become: yes
  command: microk8s enable dashboard 

- name: microk8s enable hostpath-storage
  become: yes
  command: microk8s enable hostpath-storage 

#
# add nodes to host file
#

- name: Add hosts to hosts cloud template file
  become: yes
  ansible.builtin.blockinfile: 
    path: /etc/cloud/templates/hosts.debian.tmpl
    block: |
      192.168.1.211 testkube1 
      192.168.1.212 testkube2 
      192.168.1.213 testkube3 

- name: Add hosts to /etc/hosts file
  become: yes
  ansible.builtin.blockinfile: 
    path: /etc/hosts
    block: |
      192.168.100.211 testkube1
      192.168.100.212 testkube2
      192.168.100.213 testkube3

#- name: microk8s enable storage
#  when: inventory_hostname in groups['testkubemasternodes']
#  become: yes
#  command: microk8s enable storage 

- name: microk8s enable ingress
  become: yes
  command: microk8s enable ingress 

#- name: microk8s enable gpu
#  when: inventory_hostname in groups['testkubemasternodes']
#  become: yes
#  command: microk8s enable gpu 

#- name: microk8s enable istio
#  when: inventory_hostname in groups['testkubemasternodes']
#  become: yes
#  command: microk8s enable istio 

#- name: microk8s enable registry
#  when: inventory_hostname in groups['testkubemasternodes']
#  become: yes
#  command: microk8s enable registry 

#
# Join cluster nodes
#

- name: create join token
  become: yes
  when: inventory_hostname in groups['testkubemasternodes']
  command:  microk8s add-node --format short --token-ttl 3600
  register: join_command

- name: Print return information from the previous task
  ansible.builtin.debug:
    var: join_command.stdout_lines[0]

- name: Copy join command to local file
  when: inventory_hostname in groups['testkubemasternodes']
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join_command"

- name: Copy the join command to server location
  become: yes
  when: inventory_hostname in groups['testkubeworkernodes']
  copy: src=join_command dest=/tmp/join_command.sh mode=0777

- name: Join worker nodes
  become: yes
  when: inventory_hostname in groups['testkubeworkernodes']
  command: sh /tmp/join_command.sh

- name: Fetch kubeconfig
  become: yes
  when: inventory_hostname in groups['testkubemasternodes']
  command: |
    microk8s config > /tmp/kubeconfig

- name: copy kube config to ansible host
  become: yes
  when: inventory_hostname in groups['testkubemasternodes']
  copy: src=/tmp/kubeconfig dest=./kubeconfig mode=0777 remote_src=yes
#- name: Wait for all k8s nodes to be ready
#  when: inventory_hostname in groups['testkubemasternodes']
#  shell: kubectl wait --for=condition=Ready nodes --all --timeout=600s

#- name: Install metallb
#  when: inventory_hostname in groups['testkubemasternodes']
#  command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.10/config/manifests/metallb-native.yaml
